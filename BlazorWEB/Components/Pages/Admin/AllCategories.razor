@using Application
@using Core.Entities
@page "/admin/categories"
@inject CategoryService CategoryService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<h1 class="display-1 mt-2 ps-md-2 fw-bold text-uppercase" style="font-family: Noah; font-size:170%;">
    Categories
</h1>

@if (Categories == null || !Categories.Any())
{
    <div class="alert alert-warning mt-4">
        No Categories found.
    </div>
}
else
{
    <table class="table table-bordered table-hover mb-md-5 mt-4">
        <thead class="thead-dark text-uppercase text-center" style="background-color: gainsboro">
            <tr>
                <th>Category Id</th>
                <th>Category Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Categories)
            {
                <tr>
                    <td>@category.Id</td>
                    <td>@category.Name</td>
                    <td class="d-flex justify-content-md-center align-items-md-center">
                        <div class="row">
                            <div class="col-md-6 col-12 order-0">
                                <button class="btn btn-warning btn-sm rounded-pill"
                                        @onclick="() => NavigateToEditCategory(category.Id)"
                                        style="background: #f1c40f; border: none; color: black; padding: 0.5rem 1rem; font-size: 0.875rem; width: 120px; text-align: center; display: inline-block; transition: transform 0.3s, background 0.3s;"
                                        onmouseover="this.style.background='#e0b90f'; this.style.transform='scale(1.05)';"
                                        onmouseout="this.style.background='#f1c40f'; this.style.transform='';">
                                    <i class="fa fa-edit"></i> Edit
                                </button>
                            </div>

                            <div class="col-md-6 col-12 order-1 mt-sm-2 mt-md-0">
                                <button class="btn btn-danger btn-sm rounded-pill"
                                        @onclick="() => RemoveCategory(category.Id)"
                                        style="background: #3381f6; border: none; color: white; padding: 0.5rem 1rem; font-size: 0.875rem; width: 120px; text-align: center; display: inline-block; transition: transform 0.3s, background 0.3s;"
                                        onmouseover="this.style.background='#1e5bb7'; this.style.transform='scale(1.05)';"
                                        onmouseout="this.style.background='#3381f6'; this.style.transform='';">
                                    <i class="fa fa-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="container-fluid mt-5" style="font-family: Noah">
    <div class="row">
        <button class="btn btn-link text-dark" @onclick="NavigateToAdminPanel">
            Return to Admin Panel
        </button>
    </div>
</div>

@code {
    private IEnumerable<Category> Categories = Enumerable.Empty<Category>();

    protected override async Task OnInitializedAsync()
    {
        // Load the categories from the service
        Categories = await CategoryService.GetAll();
    }

    private void NavigateToEditCategory(int categoryId)
    {
        NavigationManager.NavigateTo($"/admin/category/edit/{categoryId}");
    }

    private async Task RemoveCategory(int categoryId)
    {
        var confirm = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to remove this category?" });
        if (confirm)
        {
            await CategoryService.Delete(categoryId);
            Categories = await CategoryService.GetAll(); // Refresh the list
        }
    }

    private void NavigateToAdminPanel()
    {
        NavigationManager.NavigateTo("/admin");
    }
}
