@using Application
@using Core.Entities
@page "/admin/product/update/details/{ProductId:int}"
@inject ProductService ProductService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h1 class="display-1 mt-2 ps-md-2 fw-bold text-uppercase" style="font-family: Noah; font-size:170%;">
    Update Product Details
</h1>

<EditForm Model="Product" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mb-3">
        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Name" class="form-label">Product Name</label>
                <InputText id="Name" class="form-control" @bind-Value="Product.Name" required />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Price" class="form-label">Price</label>
                <InputNumber id="Price" class="form-control" @bind-Value="Product.Price" required />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Description" class="form-label">Description</label>
                <InputTextArea id="Description" class="form-control" @bind-Value="Product.Description" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Weight" class="form-label">Weight</label>
                <InputNumber id="Weight" class="form-control" @bind-Value="Product.Weight" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Manufacturer" class="form-label">Manufacturer</label>
                <InputText id="Manufacturer" class="form-control" @bind-Value="Product.Manufacturer" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Color" class="form-label">Color</label>
                <InputText id="Color" class="form-control" @bind-Value="Product.Color" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Category" class="form-label">Category</label>
                <InputText id="Category" class="form-control" @bind-Value="Product.Category" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-5 col-12">
                <label for="Quantity" class="form-label">Quantity</label>
                <InputNumber id="Quantity" class="form-control" @bind-Value="Product.Quantity" required />
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }

    <button type="submit" class="custom-button text-center">Update</button>
</EditForm>

<div class="container-fluid mt-5" style="font-family: Noah">
    <div class="row">
        <button class="btn btn-link text-dark" @onclick="NavigateToAdminPanel">
            Return to Admin Panel
        </button>
    </div>
</div>

@code {
    [Parameter] public int ProductId { get; set; }
    private Product Product { get; set; } = new Product();
    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch product details using the ProductId
            Product = await ProductService.GetById(ProductId);
        }
        catch (Exception)
        {
            ErrorMessage = "Unable to load product details.";
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            // Update the product details
            await ProductService.Update(Product);

            // Navigate to the admin panel after successful update
            NavigationManager.NavigateTo("/admin");
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred while updating the product details. Please try again.";
        }
    }

    private void NavigateToAdminPanel()
    {
        NavigationManager.NavigateTo("/admin");
    }
}
