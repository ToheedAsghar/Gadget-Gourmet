@using Application
@using Core.Entities
@page "/admin/users"
@inject UserService UserService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h1 class="display-1 mt-2 ps-md-2 fw-bold text-uppercase" style="font-family: Noah; font-size:170%;">
    All Users
</h1>

@if (Users == null || !Users.Any())
{
    <div class="alert alert-warning mt-4">
        No Users found.
    </div>
}
else
{
    <table class="table table-bordered table-hover mb-md-5 mt-4">
        <thead class="thead-dark text-uppercase text-center" style="background-color: gainsboro">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>UserName</th>
                <th>Email</th>
                <th>Password</th>
                <th>Address</th>
                <th>Phone</th>
                <th>Gender</th>
                <th>DateOfBirth</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.Password</td>
                    <td>@user.Address</td>
                    <td>@user.Phone</td>
                    <td>@user.Gender</td>
                    <td>@user.DateOfBirth.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="container-fluid mt-5" style="font-family: Noah">
    <div class="row">
        <button class="btn btn-link text-dark" @onclick="NavigateToAdminPanel">
            Return to Admin Panel
        </button>
    </div>
</div>

@code {
    private IEnumerable<User> Users = Enumerable.Empty<User>();

    protected override async Task OnInitializedAsync()
    {
        // Load the users from the service
        Users = await UserService.GetAll();
    }

    private void NavigateToAdminPanel()
    {
        NavigationManager.NavigateTo("/admin");
    }
}
